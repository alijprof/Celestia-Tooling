#!/bin/bash

#In this part the celestia APP and NODE have already been installed during the consensus node set up

#In this we will be running both the consensus and bridge node on the same device and linking them together

# Define default values for parameters
DEFAULT_CORE_IP="localhost"
DEFAULT_CORE_RPC_PORT="26657"
DEFAULT_CORE_GRPC_PORT="9090"
DEFAULT_KEYRING_ACCNAME="my_celes_key"
DEFAULT_METRICS_TLS="false"
DEFAULT_METRICS_ENDPOINT="otel.celestia.tools:4318"
DEFAULT_GATEWAY_ADDR="localhost"
DEFAULT_GATEWAY_PORT="26659"
DEFAULT_P2P_NETWORK="blockspacerace"

# Parse input parameters
CORE_IP=${1:-$DEFAULT_CORE_IP}
CORE_RPC_PORT=${2:-$DEFAULT_CORE_RPC_PORT}
CORE_GRPC_PORT=${3:-$DEFAULT_CORE_GRPC_PORT}
KEYRING_ACCNAME=${4:-$DEFAULT_KEYRING_ACCNAME}
METRICS_TLS=${5:-$DEFAULT_METRICS_TLS}
METRICS_ENDPOINT=${6:-$DEFAULT_METRICS_ENDPOINT}
GATEWAY_ADDR=${7:-$DEFAULT_GATEWAY_ADDR}
GATEWAY_PORT=${8:-$DEFAULT_GATEWAY_PORT}
P2P_NETWORK=${9:-$DEFAULT_P2P_NETWORK}

# Change to celestia-node directory
cd ~/celestia-node

# Initialize celestia bridge
celestia bridge init --core.ip "$CORE_IP" --p2p.network "$P2P_NETWORK"

# Create system service
SERVICE_FILE="$HOME/celestia-bridged.service"
echo "[Unit]
Description=celestia-bridge Bridge Node
After=network-online.target
[Service]
User=root
ExecStart=/usr/local/bin/celestia bridge start --core.ip $CORE_IP --core.rpc.port $CORE_RPC_PORT --core.grpc.port $CORE_GRPC_PORT --keyring.accname $KEYRING_ACCNAME --metrics.tls=$METRICS_TLS --metrics --metrics.endpoint $METRICS_ENDPOINT --gateway --gateway.addr $GATEWAY_ADDR --gateway.port $GATEWAY_PORT --p2p.network $P2P_NETWORK
Restart=on-failure
RestartSec=3
LimitNOFILE=4096
[Install]
WantedBy=multi-user.target" > "$SERVICE_FILE"

sudo mv "$SERVICE_FILE" /etc/systemd/system/

# Display wallet address
echo "Your wallet address is below. To pay for data transactions, you will need to fund this address. Check Discord for a faucet."
cat ./cel-key list --node.type light --keyring-backend test --p2p.network "$P2P_NETWORK"

# Display logs
echo "You can display logs at any time with:"
echo "sudo journalctl -u celestia-bridged.service -f"
echo -n "Press y to display logs on the terminal (otherwise press enter) > "
read -r display_logs
echo

if [[ "$display_logs" == "y" ]]; then
    sudo journalctl -u celestia-bridged.service -f
fi
