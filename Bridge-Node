#!/bin/bash

#In this part the celestia APP and NODE have already been installed during the consensus node set up

#In this we will be running both the consensus and bridge node on the same device and linking them together

CORE_IP=${1:-localhost}
CORE_RPC_PORT=${2:-26657}
CORE_GRPC_PORT=${3:-9090}
KEYRING_ACCNAME=${4:-my_celes_key}
METRICS_TLS=${5:-false}
METRICS_ENDPOINT=${6:-otel.celestia.tools:4318}
GATEWAY_ADDR=${7:-localhost}
GATEWAY_PORT=${8:-26659}
P2P_NETWORK=${9:-blockspacerace}

cd ~/celestia-node

celestia bridge init --core.ip $CORE_IP --p2p.network $P2P_NETWORK

#create system service
echo "[Unit]
Description=celestia-bridge Bridge Node
After=network-online.target
[Service]
User=root
ExecStart=/usr/local/bin/celestia bridge start --core.ip $CORE_IP --core.rpc.port $CORE_RPC_PORT --core.grpc.port $CORE_GRPC_PORT --keyring.accname $KEYRING_ACCNAME --metrics.tls=$METRICS_TLS --metrics --metrics.endpoint $METRICS_ENDPOINT --gateway --gateway.addr $GATEWAY_ADDR --gateway.port $GATEWAY_PORT --p2p.network $P2P_NETWORK
Restart=on-failure
RestartSec=3
LimitNOFILE=4096
[Install]
WantedBy=multi-user.target" > $HOME/celestia-bridged.service

sudo mv $HOME/celestia-bridged.service /etc/systemd/system/

#display wallet 
cd celestia-node
echo "Your wallet address is below, to pay for data transactions you will need to fund this address - Check Discord for a faucet"
cat ./cel-key list --node.type bridge --keyring-backend test --p2p.network $P2P_NETWORK

#logs
echo "You can display logs at any time with"
echo "sudo journalctl -u celestia-bridged.service -f"
echo -n "Press y to display logs on the terminal (otherwise press enter) > "
read displaylogs
echo

if [[ "$displaylogs" == "y" ]]
then
    sudo journalctl -u celestia-bridged.service -f
fi

